export default {
  olum: "Olumjs",
  olumDesc: "The VanillaJS developer’s platform.",
  docsLink: "Docs",
  faqLink: "FAQ",
  seeDocs: "See Documentation",
  simpleComp: "Simple Component",
  quickStart: "Quick Start",
  "olumInfoDesc-1": "Olum is a simple lightweight frontend library for providing spa experience,",
  "olumInfoDesc-2":
    "You don't need to learn a new library or a framework if you already know vanilla js, and this is the reason behind Olumjs creation.",
  pros: "Pros",
  reuseComp: "Reusable Components",
  mgtSys: "State Management System",
  spa: "Routing SPA",
  libSize: "A size of 14kb including router, state management, other helpers",
  codeWithVanilla: "Coding with Vanilla JS, the best feature",
  copyRight: "Copyright © 2022 Olum Inc.",
  wip: "Work in process",
  ecoSys: "EcoSystem",
  contributors: "Contributors",
  ecoSysCLI: "CLI",
  cliDesc: "A command-line interface for generating boilerplate to get started your app asap",
  ecoSysRouter: "Router",
  routerDesc: "A built-in router that handles direct and indirect domains",
  ecoSysStateMGT: "State Management",
  stateMGTDesc: "A built-in state management system for sharing data between components",
  ecoSysDevTool: "Devtool",
  devToolDesc: "A simple dev tool that works anywhere regardless of the browser type",
  ecoSysVSC: "VScode",
  vscDesc: "Code snippets and syntax highlighter for easing your work with a single tab",
  faqTitle: "Frequently Asked Questions",
  q1: "How to get started?",
  a1: "By spending from 30 to 60 minutes reading the <a href='https://olumjs.github.io/docs' target='_blank'>Docs</a> you will be ready to start your project right away",
  q2: "Why should I use olum over vue, react and angular?",
  a2: "Olumjs is dedicated to making developers write vanilla javascript code so you don't need to spend months learning a new technology If you already know vanilla,<br/> In other words, Olumjs is for vanilla js fans",
  q3: "Why Olumjs component has HTML extension?",
  a3: "Since It's built for writing vanilla code so it makes sense to use Html extension<br/> and in the Html file we have access to emmet abbreviations and syntax highlighter that works anywhere regardless of the code editor type",
  q4: "Does olumjs have a VScode extension?",
  a4: "Yes here is the official <a href='https://marketplace.visualstudio.com/items?itemName=eissapk.olum' target='_blank'>olumjs extension</a>",
  q5: "Does olumjs have a devtool?",
  a5: "Yes but It's not a browser extension, It's integrated with your app Itself, <br/>See Its <a href='https://olumjs.github.io/docs' target='_blank'>Docs</a> and download it from <a href='https://raw.githubusercontent.com/olumjs/olum-devtool/master/devtool.js' target='_blank'>here</a>",
  q6: "Does olumjs have a CLI tool?",
  a6: "Yes there Is a command-line interface for generating boilerplate to get started your app asap, see Its <a href='https://olumjs.github.io/docs' target='_blank'>Docs</a>",
  q7: "Is there a Router?",
  a7: "Yes there is a built-in router that handles direct and Indirect domains, see Its <a href='https://olumjs.github.io/docs' target='_blank'>Docs</a>",
  q8: "Is there a State Management System?",
  a8: "Yes there Is a built-in state management system for sharing data between components, see Its <a href='https://olumjs.github.io/docs' target='_blank'>Docs</a>",
  q9: "Is there a hot reload?",
  a9: "Yes If you used the CLI, see Its <a href='https://olumjs.github.io/docs' target='_blank'>Docs</a>",
  q10: "Can I use olumjs without the CLI tool?",
  a10: "Yes but you will be needing to set up your own bundler such as webpack once you decide to deploy your app",
  q11: "Can I use other libraries within olum app such as bootstrap?",
  a11: "Yes you can install for example bootstrap via npm at the root of your project and import it in app.scss or via the CDN in index.html",
};
